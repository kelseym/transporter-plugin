import org.gradle.api.publish.maven.MavenPublication
import org.gradle.api.tasks.bundling.Jar

/*
 * xnat-transporter-plugin: build.gradle
 * XNAT https://www.xnat.org
 * Copyright (c) 2005-2021, Washington University School of Medicine
 * All Rights Reserved
 *
 * Released under the Simplified BSD.
 */

buildscript {
    ext {
        vXnat = "1.8.9.1"
    }
}

plugins {
    id "idea"
    id "jacoco"
    id "java"
    id "io.freefair.lombok" version "6.0.0-m2"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.nrg.xnat.build.xnat-data-builder" version "1.8.6"
    id 'maven-publish'
}

group "org.nrg.xnatx.plugins"
version "0.2.0"
description "XNAT Transporter Plugin"

// TODO: This provides access to all of these repositories for dependency resolution.
repositories {
    mavenLocal()
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-release" }
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot" }
    mavenCentral()
}

// TODO: This defines a dependency package, specifically the XNAT NRG parent pom, which specifies
//       versions for all of XNAT's dependencies. This helps ensure that plugins are building
//       against the same versions of various libraries as XNAT itself.
dependencyManagement.imports {
    mavenBom "org.nrg:parent:1.8.6"
}

// TODO: This is a pretty minimal set of dependencies, so don't worry if you need to add more.
dependencies {
    implementation platform("org.nrg:parent:${vXnat}")

    implementation "org.nrg.xnat:web"
    implementation "org.nrg.xdat:core"
    implementation "org.nrg:framework"
    implementation "io.springfox:springfox-swagger2"
    implementation "io.springfox:springfox-swagger-ui"
    implementation "org.springframework:spring-web"
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation "com.vladmihalcea:hibernate-types-43"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-guava"
    testImplementation "junit:junit"
    testImplementation "com.h2database:h2"
    testImplementation "org.hamcrest:hamcrest-library"
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.security:spring-security-config"
    testImplementation "org.springframework:spring-jdbc"
    testImplementation "org.springframework:spring-orm"
    testImplementation "org.springframework:spring-webmvc"
    testImplementation "org.apache.commons:commons-dbcp2"
    compileOnly "log4j:log4j"
}

//configurations {
//    all {
//        exclude group: "junit"
//        exclude group: "net.logstash.logback"
//        exclude group: "org.nrg.xnat.pipeline"
//        exclude group: "org.slf4j", module: "jcl-over-slf4j"
//        exclude group: "org.slf4j", module: "log4j-over-slf4j"
//        exclude group: "org.slf4j", module: "slf4j-log4j12"
//        exclude group: "org.slf4j", module: "slf4j-simple"
//    }
//    implementation.extendsFrom(implementAndInclude)
//}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = false
        csv.enabled = true
        html.enabled = true
    }
}

java {
    // TODO: As of the 1.8.x release, XNAT is built as a Java 8-compatible (i.e. JDK 1.8)
    //       application. All plugins must be 1.8 compatible as well. This does NOT mean
    //       the code must be compiled with Java 8, just that the compiled byte code must
    //       be compatible with running in a Java 8 environment.
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// Pulls in the Jenkins BUILD_NUMBER environment variable if available.
def buildDate = new Date()
def buildNumber = System.getenv().BUILD_NUMBER?.toInteger() ?: "Manual"

ext.gitManifest = manifest {
    attributes "Application-Name": project.description,
            "Build-Date": buildDate
}

logger.info """
Building artifacts with manifest attributes:

 * Build-Date:              ${buildDate}
"""


task javadocJar(type: Jar) {
    classifier "javadoc"
    manifest {
        from gitManifest
    }
    from javadoc.destinationDir
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    manifest {
        from gitManifest
    }
    from sourceSets.main.allSource
}

jar {
    dependsOn test, sourceJar, javadocJar
    enabled = true
    manifest {
        from gitManifest
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifacts {
                artifact sourceJar
                artifact javadocJar
                artifact jar
            }
        }
    }
}
